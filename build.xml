<?xml version="1.0" ?>

<!-- Build instruction for HARViewer application. In order to build final
    distribuition, run: $ant build within the application directory and
    deploy all files located within the new 'release' directory -->
<project name="HARViewer" basedir="." default="build">

    <!-- Directories -->
    <property name="build.dir" value="release"/>
    <property name="temp.dir" value="release/temp"/>
    <property name="examples.dir" value="examples"/>
    <property name="images.dir" value="images"/>
    <property name="downloadify.dir" value="downloadify"/>
    <property name="xslt.dir" value="xslt"/>
    <property file="ant.properties"/>
    <property name="build.tools.dir" value="build-tools"/>

    <!-- Tools for building release package of HAR Viewer.
        js-build-tools: http://code.google.com/p/js-build-tools/
        js-min (ant task): http://code.google.com/p/jsmin-ant-task/
        shrink-safe: http://shrinksafe.dojotoolkit.org/ -->
    <property name="jsmin.jar" value="${build.tools.dir}/jsmin/jsmin.0.2.3.jar"/>
    <property name="js_build_tools.jar" value="${build.tools.dir}/js-build-tools/lib/js_build_tools.jar"/>

    <path id="compress-js">
        <fileset dir="${build.tools.dir}/dojo/shrink-safe" includes="**/*.jar"/>
    </path>

    <path id="js-build-tasks.classpath">
        <pathelement location="."/>
        <fileset dir="${build.tools.dir}/js-build-tools/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- Task definitions -->
    <taskdef name="compress-js"
        classname="com.webpanes.tools.ant.taskdefs.CompressJS"
        classpathref="compress-js"/>
    <taskdef name="jsmin"
        classname="net.matthaynes.jsmin.JSMin_Task"
        classpath="${jsmin.jar}"/>
    <taskdef name="preprocess"
        classname="com.moxiecode.ant.tasks.PreProcessTask"
        classpathref="js-build-tasks.classpath"/>

    <!-- Remove the previous HAR Viewer package. -->
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <!-- Build HAR Viewer package (the result is copied into ${build.dir}) -->
    <target name="build" depends="clean">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${temp.dir}"/>

        <!-- Copy examples -->
        <copy todir="${build.dir}/${examples.dir}">
            <fileset dir="${examples.dir}">
                <include name="*.har"/>
                <include name="*.harp"/>
            </fileset>
        </copy>

        <!-- Copy images -->
        <copy todir="${build.dir}/${images.dir}">
            <fileset dir="${images.dir}">
                <include name="*.gif"/>
                <include name="*.png"/>
            </fileset>
        </copy>

        <!-- Copy all css files to the temp, it'll be yet concatenated -->
        <copy todir="${temp.dir}">
            <fileset dir="images" includes="*.css"/>
        </copy>

        <!-- These PHP files are copied into the root directory -->
        <copy file="index.php" tofile="${build.dir}/index.php" />
        <copy file="loader.php" tofile="${build.dir}/loader.php" />
        <copy file="pagelist.php" tofile="${build.dir}/pagelist.php" />

        <!-- Copy the rest of PHP files to the lib directory -->
        <copy todir="${build.dir}/lib">
            <fileset dir="lib" includes="*.php"/>
        </copy>

        <!-- Schema is displayed in the UI so, copy to the build -->
        <copy file="lib/schema.js" todir="${build.dir}/lib"/>

        <!-- Copy specific files to the build -->
        <copy file="license.txt" tofile="${build.dir}/license.txt" />
        <copy file="ReleaseNotes.txt" tofile="${build.dir}/ReleaseNotes.txt" />

        <!-- Preprocess har.core.js, move it into the temp directory. and compress.
            (http://code.google.com/p/js-build-tools/wiki/AntTasks) -->
        <preprocess infile="lib/har.core.js" outfile="${temp.dir}/har.core.js" defines="_RELEASE" />
        <compress-js file="${temp.dir}/har.core.js" todir="${temp.dir}" />

        <!-- Compress HAR files and move to the temp directory
            dojo.js, har.dojo.js: already compressed by dojo build
            har.core.js: already preprocessed & compressed into temp directory.
            domplate.js: must be minimized using jsmin 
            schema.js: displayed in the UI, must not be compressed -->
        <compress-js todir="${temp.dir}">
            <fileset dir="lib">
                <include name="*.js"/>
                <exclude name="dojo.js"/>
                <exclude name="har.dojo.js"/>
                <exclude name="har.core.js"/>
                <exclude name="domplate.js"/>
                <exclude name="schema.js"/>
            </fileset>
        </compress-js>

        <!-- Compress domplate using jsmin and move to the temp -->
        <jsmin srcfile="lib/domplate.js" suffix="true"/>
        <move file="lib/domplate.min.js" tofile="${temp.dir}/domplate.js"/>

        <!-- Copy dojo, it's already compressed -->
        <copy file="lib/dojo.js" todir="${temp.dir}"/>
        <copy file="lib/har.dojo.js" todir="${temp.dir}"/>

        <!-- Append core JS files to har.js in this order:
            dojo.js, har.dojo.js, har.core.js, har.lib.js, har.rep.js  -->
        <concat destfile="${build.dir}/lib/har.js">
            <filelist dir="${temp.dir}"
                files="dojo.js,har.dojo.js,har.core.js,domplate.js,strings.js,har.lib.js,har.rep.js" />
        </concat>

        <!-- Append Downloadify files, these are already minimized. -->
        <concat destfile="${build.dir}/lib/har.js" append="true">
            <filelist dir="${downloadify.dir}/js"
                files="downloadify.min.js,swfobject.js" />
        </concat>

        <!-- Copy Downloadify implementation in Flash. -->
        <copy todir="${build.dir}/downloadify/media">
            <fileset dir="${downloadify.dir}/media">
                <include name="*.swf"/>
            </fileset>
        </copy>

        <!-- Copy Excanvas (already compiled). This file is not appended
            into the har.js file since it's downloaded only by IE. -->
        <copy todir="${build.dir}/excanvas">
            <fileset dir="excanvas">
                <include name="excanvas.compiled.js"/>
            </fileset>
        </copy>

        <!-- Append the other files -->
        <concat destfile="${build.dir}/lib/har.js" append="true">
            <fileset dir="${temp.dir}">
                <include name="*.js"/>
                <exclude name="dojo.js"/>
                <exclude name="har.dojo.js"/>
                <exclude name="har.core.js"/>
                <exclude name="domplate.js"/>
                <exclude name="strings.js"/>
                <exclude name="har.lib.js"/>
                <exclude name="har.rep.js"/>
            </fileset>
        </concat>

        <!-- Join all CSS files into one har.css file and move to the build/images dir  -->
        <concat destfile="${build.dir}/images/har.css">
            <fileset dir="${temp.dir}" includes="*.css" />
        </concat>

        <!-- Delete temp directory -->
        <delete dir="${temp.dir}"/>

        <!-- Generate version number. The version info is loaded from 'ant.properties' file. -->
        <replace dir="${build.dir}" propertyFile="ant.properties">
            <include name="**/*.php" />
            <replacefilter token="@VERSION@" property="VERSION"/>
            <replacefilter token="@GOOGLE-ANALYTICS-PROFILE@" property="GOOGLE-ANALYTICS-PROFILE"/>
        </replace>

        <!-- Mark created distribution as "release" -->
        <replace file="${build.dir}/lib/global.php" token="@dev@" value="release" />

        <!-- Final version message -->
        <echo message="HARViewer version: ${VERSION}"/>

    </target>

</project>
